/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7-dev */

#ifndef PB_SIMPLE_PB_H_INCLUDED
#define PB_SIMPLE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SimpleMessage {
    uint32_t test_uint32;
    uint64_t test_uint64;
    float test_float;
    pb_callback_t test_string;
    pb_callback_t test_sub_message;
} SimpleMessage;

typedef struct _SimpleSubMessage {
    bool has_test;
    uint32_t test;
} SimpleSubMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SimpleSubMessage_init_default            {false, 0}
#define SimpleMessage_init_default               {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define SimpleSubMessage_init_zero               {false, 0}
#define SimpleMessage_init_zero                  {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define SimpleMessage_test_uint32_tag            2
#define SimpleMessage_test_uint64_tag            3
#define SimpleMessage_test_float_tag             4
#define SimpleMessage_test_string_tag            5
#define SimpleMessage_test_sub_message_tag       7
#define SimpleSubMessage_test_tag                6

/* Struct field encoding specification for nanopb */
#define SimpleSubMessage_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   test,              6)
#define SimpleSubMessage_CALLBACK NULL
#define SimpleSubMessage_DEFAULT NULL

#define SimpleMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   test_uint32,       2) \
X(a, STATIC,   REQUIRED, UINT64,   test_uint64,       3) \
X(a, STATIC,   REQUIRED, FLOAT,    test_float,        4) \
X(a, CALLBACK, REQUIRED, STRING,   test_string,       5) \
X(a, CALLBACK, REQUIRED, MESSAGE,  test_sub_message,   7)
#define SimpleMessage_CALLBACK pb_default_field_callback
#define SimpleMessage_DEFAULT NULL
#define SimpleMessage_test_sub_message_MSGTYPE SimpleSubMessage

extern const pb_msgdesc_t SimpleSubMessage_msg;
extern const pb_msgdesc_t SimpleMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SimpleSubMessage_fields &SimpleSubMessage_msg
#define SimpleMessage_fields &SimpleMessage_msg

/* Maximum encoded size of messages (where known) */
/* SimpleMessage_size depends on runtime parameters */
#define SimpleSubMessage_size                    6

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
